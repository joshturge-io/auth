// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package proto_auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Credentials struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (m *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(m, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Credentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Session struct {
	// expiration time can be worked out client side since our jwt holds
	// the expiration time.
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Jwt                  string   `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	RefreshExpiration    int64    `protobuf:"varint,4,opt,name=refresh_expiration,json=refreshExpiration,proto3" json:"refresh_expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Session) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *Session) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *Session) GetRefreshExpiration() int64 {
	if m != nil {
		return m.RefreshExpiration
	}
	return 0
}

type LogoutStatus struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutStatus) Reset()         { *m = LogoutStatus{} }
func (m *LogoutStatus) String() string { return proto.CompactTextString(m) }
func (*LogoutStatus) ProtoMessage()    {}
func (*LogoutStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *LogoutStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutStatus.Unmarshal(m, b)
}
func (m *LogoutStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutStatus.Marshal(b, m, deterministic)
}
func (m *LogoutStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutStatus.Merge(m, src)
}
func (m *LogoutStatus) XXX_Size() int {
	return xxx_messageInfo_LogoutStatus.Size(m)
}
func (m *LogoutStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutStatus proto.InternalMessageInfo

func (m *LogoutStatus) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LogoutStatus) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LogoutStatus) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type JWT struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWT) Reset()         { *m = JWT{} }
func (m *JWT) String() string { return proto.CompactTextString(m) }
func (*JWT) ProtoMessage()    {}
func (*JWT) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *JWT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWT.Unmarshal(m, b)
}
func (m *JWT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWT.Marshal(b, m, deterministic)
}
func (m *JWT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWT.Merge(m, src)
}
func (m *JWT) XXX_Size() int {
	return xxx_messageInfo_JWT.Size(m)
}
func (m *JWT) XXX_DiscardUnknown() {
	xxx_messageInfo_JWT.DiscardUnknown(m)
}

var xxx_messageInfo_JWT proto.InternalMessageInfo

func (m *JWT) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ValidityStatus struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidityStatus) Reset()         { *m = ValidityStatus{} }
func (m *ValidityStatus) String() string { return proto.CompactTextString(m) }
func (*ValidityStatus) ProtoMessage()    {}
func (*ValidityStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{4}
}

func (m *ValidityStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidityStatus.Unmarshal(m, b)
}
func (m *ValidityStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidityStatus.Marshal(b, m, deterministic)
}
func (m *ValidityStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidityStatus.Merge(m, src)
}
func (m *ValidityStatus) XXX_Size() int {
	return xxx_messageInfo_ValidityStatus.Size(m)
}
func (m *ValidityStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidityStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ValidityStatus proto.InternalMessageInfo

func (m *ValidityStatus) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*Credentials)(nil), "proto.auth.Credentials")
	proto.RegisterType((*Session)(nil), "proto.auth.Session")
	proto.RegisterType((*LogoutStatus)(nil), "proto.auth.LogoutStatus")
	proto.RegisterType((*JWT)(nil), "proto.auth.JWT")
	proto.RegisterType((*ValidityStatus)(nil), "proto.auth.ValidityStatus")
}

func init() {
	proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874)
}

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x51, 0x4f, 0xf2, 0x30,
	0x14, 0xcd, 0xbe, 0x7d, 0x30, 0xbc, 0x20, 0x6a, 0x25, 0x61, 0x99, 0x2f, 0x64, 0x26, 0x86, 0x17,
	0xf7, 0x20, 0x31, 0x26, 0xbe, 0x19, 0xc3, 0x83, 0x84, 0xa7, 0x41, 0xe4, 0x91, 0x54, 0x56, 0xa1,
	0x0a, 0x2b, 0x69, 0xef, 0x44, 0xff, 0x81, 0x7f, 0xd7, 0x7f, 0x60, 0xda, 0x6e, 0xb8, 0x98, 0xf9,
	0xd4, 0x9e, 0x73, 0xee, 0x6d, 0xcf, 0x3d, 0x17, 0x80, 0x66, 0xb8, 0x8a, 0xb6, 0x52, 0xa0, 0x20,
	0x60, 0x8e, 0x48, 0x33, 0xe1, 0x10, 0x9a, 0xf7, 0x92, 0x25, 0x2c, 0x45, 0x4e, 0xd7, 0x8a, 0x04,
	0xd0, 0xc8, 0x14, 0x93, 0x29, 0xdd, 0x30, 0xdf, 0xe9, 0x39, 0xfd, 0x83, 0x78, 0x8f, 0xb5, 0xb6,
	0xa5, 0x4a, 0xed, 0x84, 0x4c, 0xfc, 0x7f, 0x56, 0x2b, 0x70, 0xf8, 0xe9, 0x80, 0x37, 0x61, 0x4a,
	0x71, 0x91, 0x92, 0x2e, 0x78, 0xba, 0x67, 0xce, 0x93, 0xfc, 0x89, 0xba, 0x86, 0x0f, 0x09, 0x39,
	0x06, 0xf7, 0x65, 0x87, 0x79, 0xaf, 0xbe, 0x92, 0x73, 0x38, 0x94, 0xec, 0x59, 0x32, 0xb5, 0x9a,
	0xa3, 0x78, 0x65, 0xa9, 0xef, 0x1a, 0xad, 0x95, 0x93, 0x53, 0xcd, 0x91, 0x4b, 0x20, 0x45, 0x11,
	0x7b, 0xdf, 0x72, 0x49, 0x91, 0x8b, 0xd4, 0xff, 0xdf, 0x73, 0xfa, 0x6e, 0x7c, 0x92, 0x2b, 0xc3,
	0xbd, 0x10, 0x4e, 0xa0, 0x35, 0x16, 0x4b, 0x91, 0xe1, 0x04, 0x29, 0x66, 0xea, 0x6f, 0x3b, 0x3e,
	0x78, 0x2a, 0x5b, 0x2c, 0x98, 0x52, 0xc6, 0x52, 0x23, 0x2e, 0xa0, 0x36, 0xba, 0x51, 0xcb, 0xdc,
	0x8c, 0xbe, 0x86, 0x67, 0xe0, 0x8e, 0x66, 0x53, 0xd2, 0x81, 0x9a, 0xf5, 0x69, 0x5f, 0xb2, 0x20,
	0xbc, 0x80, 0xf6, 0x23, 0x5d, 0xf3, 0x84, 0xe3, 0x47, 0xfe, 0x67, 0x07, 0x6a, 0x6f, 0x9a, 0x31,
	0x75, 0x8d, 0xd8, 0x82, 0xab, 0x2f, 0x07, 0xda, 0x77, 0x19, 0xae, 0x74, 0xd8, 0x0b, 0x63, 0x96,
	0x5c, 0x43, 0x6d, 0x2c, 0x96, 0x3c, 0x25, 0xdd, 0xe8, 0x67, 0x29, 0x51, 0x69, 0x23, 0xc1, 0x69,
	0x59, 0x28, 0x22, 0x1e, 0x80, 0x17, 0xdb, 0xc1, 0x49, 0x95, 0x5e, 0xdd, 0x74, 0x0b, 0x4d, 0x63,
	0x93, 0x22, 0xd3, 0xb3, 0x1c, 0x95, 0x6b, 0x46, 0xb3, 0x69, 0x10, 0x94, 0x89, 0x5f, 0x03, 0xdd,
	0x40, 0xdd, 0x86, 0x5a, 0xfd, 0x9f, 0x5f, 0x26, 0xcb, 0xe9, 0x3f, 0xd5, 0x8d, 0x30, 0xf8, 0x0e,
	0x00, 0x00, 0xff, 0xff, 0x47, 0xdf, 0x54, 0x91, 0x80, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthenticationClient is the client API for Authentication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationClient interface {
	Login(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*Session, error)
	Refresh(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	ValidateJWT(ctx context.Context, in *JWT, opts ...grpc.CallOption) (*ValidityStatus, error)
	Logout(ctx context.Context, in *Session, opts ...grpc.CallOption) (*LogoutStatus, error)
}

type authenticationClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthenticationClient(cc grpc.ClientConnInterface) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) Login(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/proto.auth.Authentication/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Refresh(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/proto.auth.Authentication/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) ValidateJWT(ctx context.Context, in *JWT, opts ...grpc.CallOption) (*ValidityStatus, error) {
	out := new(ValidityStatus)
	err := c.cc.Invoke(ctx, "/proto.auth.Authentication/ValidateJWT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Logout(ctx context.Context, in *Session, opts ...grpc.CallOption) (*LogoutStatus, error) {
	out := new(LogoutStatus)
	err := c.cc.Invoke(ctx, "/proto.auth.Authentication/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServer is the server API for Authentication service.
type AuthenticationServer interface {
	Login(context.Context, *Credentials) (*Session, error)
	Refresh(context.Context, *Session) (*Session, error)
	ValidateJWT(context.Context, *JWT) (*ValidityStatus, error)
	Logout(context.Context, *Session) (*LogoutStatus, error)
}

// UnimplementedAuthenticationServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServer struct {
}

func (*UnimplementedAuthenticationServer) Login(ctx context.Context, req *Credentials) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthenticationServer) Refresh(ctx context.Context, req *Session) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}
func (*UnimplementedAuthenticationServer) ValidateJWT(ctx context.Context, req *JWT) (*ValidityStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateJWT not implemented")
}
func (*UnimplementedAuthenticationServer) Logout(ctx context.Context, req *Session) (*LogoutStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.auth.Authentication/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Login(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.auth.Authentication/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Refresh(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_ValidateJWT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JWT)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).ValidateJWT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.auth.Authentication/ValidateJWT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).ValidateJWT(ctx, req.(*JWT))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.auth.Authentication/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Logout(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.auth.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Authentication_Login_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _Authentication_Refresh_Handler,
		},
		{
			MethodName: "ValidateJWT",
			Handler:    _Authentication_ValidateJWT_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Authentication_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
